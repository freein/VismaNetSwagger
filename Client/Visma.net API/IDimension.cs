// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Dimension operations.
    /// </summary>
    public partial interface IDimension
    {
        /// <summary>
        /// Get a list of all Dimension names/IDs
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> GetDimensionListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific Dimension
        /// </summary>
        /// <param name='dimensionId'>
        /// </param>
        /// <param name='greaterThanValue'>
        /// </param>
        /// <param name='numberToRead'>
        /// </param>
        /// <param name='skipRecords'>
        /// </param>
        /// <param name='orderBy'>
        /// </param>
        /// <param name='lastModifiedDateTime'>
        /// </param>
        /// <param name='lastModifiedDateTimeCondition'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DtoDimension>> GetDimensionWithHttpMessagesAsync(string dimensionId, string greaterThanValue = default(string), int? numberToRead = default(int?), int? skipRecords = default(int?), string orderBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedDateTimeCondition = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific Segment for a specific Dimension
        /// </summary>
        /// <param name='dimensionId'>
        /// Identifies the Dimension
        /// </param>
        /// <param name='segmentId'>
        /// Identifies the Segment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DtoSegment>> GetSegmentWithHttpMessagesAsync(string dimensionId, int? segmentId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update a Segment
        /// </summary>
        /// <param name='dimensionId'>
        /// Identifies the Dimension for which the Segment is defined
        /// </param>
        /// <param name='segmentId'>
        /// Identifies the Segment
        /// </param>
        /// <param name='update'>
        /// Defines the data for the Segment to update
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateSegmentWithHttpMessagesAsync(string dimensionId, int? segmentId, DtoSegmentUpdate update, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific SegmentValue for a specific Segment for a specific
        /// Dimension
        /// </summary>
        /// <param name='dimensionId'>
        /// Identifies the Dimension
        /// </param>
        /// <param name='segmentId'>
        /// Identifies the Segment
        /// </param>
        /// <param name='publicId'>
        /// Identifies the SegmentValue by its publicId
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DtoSegmentValue>> GetSegmentValueWithHttpMessagesAsync(string dimensionId, int? segmentId, string publicId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific SegmentValue for a specific Segment for a specific
        /// Dimension
        /// </summary>
        /// <param name='dimensionId'>
        /// Identifies the Dimension
        /// </param>
        /// <param name='segmentId'>
        /// Identifies the Segment
        /// </param>
        /// <param name='valueId'>
        /// Identifies the SegmentValue by Id. Must be Base64 encoded.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DtoSegmentValue>> GetSegmentValue1WithHttpMessagesAsync(string dimensionId, int? segmentId, string valueId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
