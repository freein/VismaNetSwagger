// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class CashSaleLinesUpdateDto
    {
        /// <summary>
        /// Initializes a new instance of the CashSaleLinesUpdateDto class.
        /// </summary>
        public CashSaleLinesUpdateDto() { }

        /// <summary>
        /// Initializes a new instance of the CashSaleLinesUpdateDto class.
        /// </summary>
        public CashSaleLinesUpdateDto(string operation = default(string), DtoValueString inventoryNumber = default(DtoValueString), DtoValueInt32 lineNumber = default(DtoValueInt32), DtoValueString description = default(DtoValueString), DtoValueDecimal quantity = default(DtoValueDecimal), DtoValueDecimal unitPriceInCurrency = default(DtoValueDecimal), DtoValueDecimal manualAmountInCurrency = default(DtoValueDecimal), DtoValueString accountNumber = default(DtoValueString), DtoValueString vatCodeId = default(DtoValueString), DtoValueString uom = default(DtoValueString), DtoValueDecimal discountPercent = default(DtoValueDecimal), DtoValueDecimal discountAmountInCurrency = default(DtoValueDecimal), DtoValueBoolean manualDiscount = default(DtoValueBoolean), IList<SegmentUpdateDto> subaccount = default(IList<SegmentUpdateDto>), DtoValueString salesperson = default(DtoValueString), DtoValueInt32 deferralSchedule = default(DtoValueInt32), DtoValueString deferralCode = default(DtoValueString), DtoValueString note = default(DtoValueString))
        {
            Operation = operation;
            InventoryNumber = inventoryNumber;
            LineNumber = lineNumber;
            Description = description;
            Quantity = quantity;
            UnitPriceInCurrency = unitPriceInCurrency;
            ManualAmountInCurrency = manualAmountInCurrency;
            AccountNumber = accountNumber;
            VatCodeId = vatCodeId;
            Uom = uom;
            DiscountPercent = discountPercent;
            DiscountAmountInCurrency = discountAmountInCurrency;
            ManualDiscount = manualDiscount;
            Subaccount = subaccount;
            Salesperson = salesperson;
            DeferralSchedule = deferralSchedule;
            DeferralCode = deferralCode;
            Note = note;
        }

        /// <summary>
        /// Possible values for this property include: 'Insert', 'Update',
        /// 'Delete'.
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryNumber")]
        public DtoValueString InventoryNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNumber")]
        public DtoValueInt32 LineNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public DtoValueString Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public DtoValueDecimal Quantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitPriceInCurrency")]
        public DtoValueDecimal UnitPriceInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualAmountInCurrency")]
        public DtoValueDecimal ManualAmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountNumber")]
        public DtoValueString AccountNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatCodeId")]
        public DtoValueString VatCodeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uom")]
        public DtoValueString Uom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountPercent")]
        public DtoValueDecimal DiscountPercent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountAmountInCurrency")]
        public DtoValueDecimal DiscountAmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualDiscount")]
        public DtoValueBoolean ManualDiscount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subaccount")]
        public IList<SegmentUpdateDto> Subaccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesperson")]
        public DtoValueString Salesperson { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deferralSchedule")]
        public DtoValueInt32 DeferralSchedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deferralCode")]
        public DtoValueString DeferralCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public DtoValueString Note { get; set; }

    }
}
