// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Payment in PaymentController. Used by getting
    /// data.
    /// </summary>
    public partial class PaymentDto
    {
        /// <summary>
        /// Initializes a new instance of the PaymentDto class.
        /// </summary>
        public PaymentDto() { }

        /// <summary>
        /// Initializes a new instance of the PaymentDto class.
        /// </summary>
        public PaymentDto(string type = default(string), string refNbr = default(string), string status = default(string), bool? hold = default(bool?), DateTime? applicationDate = default(DateTime?), string applicationPeriod = default(string), string paymentRef = default(string), CustomerNumberDto customer = default(CustomerNumberDto), LocationDto location = default(LocationDto), PaymentMethodIdDescriptionDto paymentMethod = default(PaymentMethodIdDescriptionDto), string cashAccount = default(string), string currency = default(string), double? paymentAmount = default(double?), string invoiceText = default(string), double? appliedToDocuments = default(double?), double? appliedToOrders = default(double?), double? availableBalance = default(double?), double? writeOffAmount = default(double?), double? financeCharges = default(double?), double? deductedCharges = default(double?), DateTime? lastModifiedDateTime = default(DateTime?), IList<PaymentLineDto> paymentLines = default(IList<PaymentLineDto>))
        {
            Type = type;
            RefNbr = refNbr;
            Status = status;
            Hold = hold;
            ApplicationDate = applicationDate;
            ApplicationPeriod = applicationPeriod;
            PaymentRef = paymentRef;
            Customer = customer;
            Location = location;
            PaymentMethod = paymentMethod;
            CashAccount = cashAccount;
            Currency = currency;
            PaymentAmount = paymentAmount;
            InvoiceText = invoiceText;
            AppliedToDocuments = appliedToDocuments;
            AppliedToOrders = appliedToOrders;
            AvailableBalance = availableBalance;
            WriteOffAmount = writeOffAmount;
            FinanceCharges = financeCharges;
            DeductedCharges = deductedCharges;
            LastModifiedDateTime = lastModifiedDateTime;
            PaymentLines = paymentLines;
        }

        /// <summary>
        /// Possible values for this property include: 'Payment',
        /// 'CreditNote', 'Prepayment', 'Refund', 'VoidPayment',
        /// 'SmallBalanceWo'.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "refNbr")]
        public string RefNbr { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Hold', 'Balanced',
        /// 'Voided', 'Scheduled', 'Open', 'Closed', 'PendingPrint',
        /// 'PendingEmail', 'CreditHold', 'CcHold'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public bool? Hold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationDate")]
        public DateTime? ApplicationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationPeriod")]
        public string ApplicationPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentRef")]
        public string PaymentRef { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customer")]
        public CustomerNumberDto Customer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public PaymentMethodIdDescriptionDto PaymentMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cashAccount")]
        public string CashAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentAmount")]
        public double? PaymentAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceText")]
        public string InvoiceText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "appliedToDocuments")]
        public double? AppliedToDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "appliedToOrders")]
        public double? AppliedToOrders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "availableBalance")]
        public double? AvailableBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "writeOffAmount")]
        public double? WriteOffAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "financeCharges")]
        public double? FinanceCharges { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deductedCharges")]
        public double? DeductedCharges { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentLines")]
        public IList<PaymentLineDto> PaymentLines { get; set; }

    }
}
