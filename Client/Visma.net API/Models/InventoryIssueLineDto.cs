// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class InventoryIssueLineDto
    {
        /// <summary>
        /// Initializes a new instance of the InventoryIssueLineDto class.
        /// </summary>
        public InventoryIssueLineDto() { }

        /// <summary>
        /// Initializes a new instance of the InventoryIssueLineDto class.
        /// </summary>
        public InventoryIssueLineDto(string transactionType = default(string), WarehouseIdDescriptionDto warehouse = default(WarehouseIdDescriptionDto), double? unitCost = default(double?), double? extCost = default(double?), double? unitPrice = default(double?), double? extPrice = default(double?), int? lineNumber = default(int?), InventoryNumberDescriptionDto inventoryItem = default(InventoryNumberDescriptionDto), LocationDto location = default(LocationDto), double? quantity = default(double?), string uom = default(string), ReasonCodeDto reasonCode = default(ReasonCodeDto), string description = default(string))
        {
            TransactionType = transactionType;
            Warehouse = warehouse;
            UnitCost = unitCost;
            ExtCost = extCost;
            UnitPrice = unitPrice;
            ExtPrice = extPrice;
            LineNumber = lineNumber;
            InventoryItem = inventoryItem;
            Location = location;
            Quantity = quantity;
            Uom = uom;
            ReasonCode = reasonCode;
            Description = description;
        }

        /// <summary>
        /// Possible values for this property include: 'Issue', 'Return',
        /// 'Invoice', 'DebitNote', 'CreditNote'.
        /// </summary>
        [JsonProperty(PropertyName = "transactionType")]
        public string TransactionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public WarehouseIdDescriptionDto Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitCost")]
        public double? UnitCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extCost")]
        public double? ExtCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitPrice")]
        public double? UnitPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extPrice")]
        public double? ExtPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNumber")]
        public int? LineNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryItem")]
        public InventoryNumberDescriptionDto InventoryItem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public double? Quantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uom")]
        public string Uom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reasonCode")]
        public ReasonCodeDto ReasonCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

    }
}
