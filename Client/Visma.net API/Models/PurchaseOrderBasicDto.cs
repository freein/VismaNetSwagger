// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Purchase Order in PurchaseOrderController.
    /// Used for getting data.
    /// </summary>
    public partial class PurchaseOrderBasicDto
    {
        /// <summary>
        /// Initializes a new instance of the PurchaseOrderBasicDto class.
        /// </summary>
        public PurchaseOrderBasicDto() { }

        /// <summary>
        /// Initializes a new instance of the PurchaseOrderBasicDto class.
        /// </summary>
        public PurchaseOrderBasicDto(string orderType = default(string), string orderNbr = default(string), bool? hold = default(bool?), string status = default(string), DateTime? date = default(DateTime?), DateTime? promisedOn = default(DateTime?), string description = default(string), SupplierDescriptionDto supplier = default(SupplierDescriptionDto), LocationIdNameDto location = default(LocationIdNameDto), UserDescriptionDto owner = default(UserDescriptionDto), string currency = default(string), string supplierRef = default(string), double? lineTotal = default(double?), double? vatExemptTotal = default(double?), double? taxTotal = default(double?), double? orderTotal = default(double?), double? controlTotal = default(double?), IList<PurchaseOrderLineDto> lines = default(IList<PurchaseOrderLineDto>), IList<TaxDetailDto> taxDetails = default(IList<TaxDetailDto>), DateTime? lastModifiedDateTime = default(DateTime?))
        {
            OrderType = orderType;
            OrderNbr = orderNbr;
            Hold = hold;
            Status = status;
            Date = date;
            PromisedOn = promisedOn;
            Description = description;
            Supplier = supplier;
            Location = location;
            Owner = owner;
            Currency = currency;
            SupplierRef = supplierRef;
            LineTotal = lineTotal;
            VatExemptTotal = vatExemptTotal;
            TaxTotal = taxTotal;
            OrderTotal = orderTotal;
            ControlTotal = controlTotal;
            Lines = lines;
            TaxDetails = taxDetails;
            LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// Possible values for this property include: 'RegularOrder',
        /// 'DropShip', 'Blanket', 'StandardBlanket'.
        /// </summary>
        [JsonProperty(PropertyName = "orderType")]
        public string OrderType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderNbr")]
        public string OrderNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public bool? Hold { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Hold', 'Balanced',
        /// 'Voided', 'Open', 'PendingPrint', 'PendingEmail', 'Cancelled',
        /// 'Closed', 'Printed'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "promisedOn")]
        public DateTime? PromisedOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplier")]
        public SupplierDescriptionDto Supplier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationIdNameDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public UserDescriptionDto Owner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplierRef")]
        public string SupplierRef { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineTotal")]
        public double? LineTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatExemptTotal")]
        public double? VatExemptTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxTotal")]
        public double? TaxTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderTotal")]
        public double? OrderTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlTotal")]
        public double? ControlTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lines")]
        public IList<PurchaseOrderLineDto> Lines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxDetails")]
        public IList<TaxDetailDto> TaxDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

    }
}
