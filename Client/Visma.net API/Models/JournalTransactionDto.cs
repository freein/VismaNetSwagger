// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a journal transaction in
    /// JournalTransactionController. Used by getting data.
    /// </summary>
    public partial class JournalTransactionDto
    {
        /// <summary>
        /// Initializes a new instance of the JournalTransactionDto class.
        /// </summary>
        public JournalTransactionDto() { }

        /// <summary>
        /// Initializes a new instance of the JournalTransactionDto class.
        /// </summary>
        public JournalTransactionDto(string module = default(string), string batchNumber = default(string), string status = default(string), bool? hold = default(bool?), DateTime? transactionDate = default(DateTime?), string postPeriod = default(string), string financialPeriod = default(string), string ledger = default(string), string ledgerDescription = default(string), string currencyId = default(string), bool? autoReversing = default(bool?), bool? reversingEntry = default(bool?), string description = default(string), string originalBatchNumber = default(string), double? debitTotal = default(double?), double? debitTotalInCurrency = default(double?), double? creditTotal = default(double?), double? creditTotalInCurrency = default(double?), double? controlTotal = default(double?), double? controlTotalInCurrency = default(double?), bool? createVatTransaction = default(bool?), bool? skipVatAmountValidation = default(bool?), DateTime? lastModifiedDateTime = default(DateTime?), string transactionCode = default(string), string transactionCodeDescription = default(string), IList<JournalTransactionLineDto> journalTransactionLines = default(IList<JournalTransactionLineDto>))
        {
            Module = module;
            BatchNumber = batchNumber;
            Status = status;
            Hold = hold;
            TransactionDate = transactionDate;
            PostPeriod = postPeriod;
            FinancialPeriod = financialPeriod;
            Ledger = ledger;
            LedgerDescription = ledgerDescription;
            CurrencyId = currencyId;
            AutoReversing = autoReversing;
            ReversingEntry = reversingEntry;
            Description = description;
            OriginalBatchNumber = originalBatchNumber;
            DebitTotal = debitTotal;
            DebitTotalInCurrency = debitTotalInCurrency;
            CreditTotal = creditTotal;
            CreditTotalInCurrency = creditTotalInCurrency;
            ControlTotal = controlTotal;
            ControlTotalInCurrency = controlTotalInCurrency;
            CreateVatTransaction = createVatTransaction;
            SkipVatAmountValidation = skipVatAmountValidation;
            LastModifiedDateTime = lastModifiedDateTime;
            TransactionCode = transactionCode;
            TransactionCodeDescription = transactionCodeDescription;
            JournalTransactionLines = journalTransactionLines;
        }

        /// <summary>
        /// Possible values for this property include: 'ModuleGL', 'ModuleAP',
        /// 'ModuleAR', 'ModuleCA', 'ModuleCM', 'ModuleIN', 'ModuleSO',
        /// 'ModulePO', 'ModuleDR', 'ModuleFA', 'ModuleEP', 'ModulePM',
        /// 'ModuleTX', 'ModuleCR'.
        /// </summary>
        [JsonProperty(PropertyName = "module")]
        public string Module { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "batchNumber")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Hold', 'Balanced',
        /// 'Unposted', 'Posted', 'Completed', 'Voided', 'Released',
        /// 'PartiallyReleased', 'Scheduled'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public bool? Hold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionDate")]
        public DateTime? TransactionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postPeriod")]
        public string PostPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "financialPeriod")]
        public string FinancialPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ledger")]
        public string Ledger { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ledgerDescription")]
        public string LedgerDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "autoReversing")]
        public bool? AutoReversing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reversingEntry")]
        public bool? ReversingEntry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originalBatchNumber")]
        public string OriginalBatchNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "debitTotal")]
        public double? DebitTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "debitTotalInCurrency")]
        public double? DebitTotalInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditTotal")]
        public double? CreditTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditTotalInCurrency")]
        public double? CreditTotalInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlTotal")]
        public double? ControlTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlTotalInCurrency")]
        public double? ControlTotalInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createVatTransaction")]
        public bool? CreateVatTransaction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "skipVatAmountValidation")]
        public bool? SkipVatAmountValidation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionCode")]
        public string TransactionCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionCodeDescription")]
        public string TransactionCodeDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "journalTransactionLines")]
        public IList<JournalTransactionLineDto> JournalTransactionLines { get; set; }

    }
}
