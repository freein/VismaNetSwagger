// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class CreditNoteUpdateDto
    {
        /// <summary>
        /// Initializes a new instance of the CreditNoteUpdateDto class.
        /// </summary>
        public CreditNoteUpdateDto() { }

        /// <summary>
        /// Initializes a new instance of the CreditNoteUpdateDto class.
        /// </summary>
        public CreditNoteUpdateDto(DtoValueString currencyId = default(DtoValueString), DtoValueString customerRefNumber = default(DtoValueString), DtoValueString externalReference = default(DtoValueString), IList<CreditNoteLineUpdateDto> invoiceLines = default(IList<CreditNoteLineUpdateDto>), DtoValueString referenceNumber = default(DtoValueString), DtoValueString customerNumber = default(DtoValueString), DtoValueDateTime documentDate = default(DtoValueDateTime), DtoValueBoolean hold = default(DtoValueBoolean), DtoValueString postPeriod = default(DtoValueString), DtoValueString financialPeriod = default(DtoValueString), DtoValueString invoiceText = default(DtoValueString), DtoValueString locationId = default(DtoValueString), DtoValueNullableInt32 salesPersonID = default(DtoValueNullableInt32), DtoValueString note = default(DtoValueString))
        {
            CurrencyId = currencyId;
            CustomerRefNumber = customerRefNumber;
            ExternalReference = externalReference;
            InvoiceLines = invoiceLines;
            ReferenceNumber = referenceNumber;
            CustomerNumber = customerNumber;
            DocumentDate = documentDate;
            Hold = hold;
            PostPeriod = postPeriod;
            FinancialPeriod = financialPeriod;
            InvoiceText = invoiceText;
            LocationId = locationId;
            SalesPersonID = salesPersonID;
            Note = note;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public DtoValueString CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerRefNumber")]
        public DtoValueString CustomerRefNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "externalReference")]
        public DtoValueString ExternalReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceLines")]
        public IList<CreditNoteLineUpdateDto> InvoiceLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "referenceNumber")]
        public DtoValueString ReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerNumber")]
        public DtoValueString CustomerNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentDate")]
        public DtoValueDateTime DocumentDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public DtoValueBoolean Hold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postPeriod")]
        public DtoValueString PostPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "financialPeriod")]
        public DtoValueString FinancialPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceText")]
        public DtoValueString InvoiceText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locationId")]
        public DtoValueString LocationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesPersonID")]
        public DtoValueNullableInt32 SalesPersonID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public DtoValueString Note { get; set; }

    }
}
