// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class CustomerDocumentDto
    {
        /// <summary>
        /// Initializes a new instance of the CustomerDocumentDto class.
        /// </summary>
        public CustomerDocumentDto() { }

        /// <summary>
        /// Initializes a new instance of the CustomerDocumentDto class.
        /// </summary>
        public CustomerDocumentDto(AccountNumberDto account = default(AccountNumberDto), SubAccountDto subaccount = default(SubAccountDto), BranchNumberDto branch = default(BranchNumberDto), DateTime? documentDueDate = default(DateTime?), CustomerNumberDto customer = default(CustomerNumberDto), string documentType = default(string), string referenceNumber = default(string), string postPeriod = default(string), string financialPeriod = default(string), DateTime? documentDate = default(DateTime?), string status = default(string), string currencyId = default(string), double? amount = default(double?), double? amountInCurrency = default(double?), double? balance = default(double?), double? balanceInCurrency = default(double?), double? cashDiscount = default(double?), double? cashDiscountInCurrency = default(double?), PaymentMethodIdDescriptionDto paymentMethod = default(PaymentMethodIdDescriptionDto), string customerRefNumber = default(string), string invoiceText = default(string), DateTime? lastModifiedDateTime = default(DateTime?), DateTime? createdDateTime = default(DateTime?), string note = default(string), double? vatTotal = default(double?), double? vatTotalInCurrency = default(double?), LocationDto location = default(LocationDto))
        {
            Account = account;
            Subaccount = subaccount;
            Branch = branch;
            DocumentDueDate = documentDueDate;
            Customer = customer;
            DocumentType = documentType;
            ReferenceNumber = referenceNumber;
            PostPeriod = postPeriod;
            FinancialPeriod = financialPeriod;
            DocumentDate = documentDate;
            Status = status;
            CurrencyId = currencyId;
            Amount = amount;
            AmountInCurrency = amountInCurrency;
            Balance = balance;
            BalanceInCurrency = balanceInCurrency;
            CashDiscount = cashDiscount;
            CashDiscountInCurrency = cashDiscountInCurrency;
            PaymentMethod = paymentMethod;
            CustomerRefNumber = customerRefNumber;
            InvoiceText = invoiceText;
            LastModifiedDateTime = lastModifiedDateTime;
            CreatedDateTime = createdDateTime;
            Note = note;
            VatTotal = vatTotal;
            VatTotalInCurrency = vatTotalInCurrency;
            Location = location;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountNumberDto Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subaccount")]
        public SubAccountDto Subaccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public BranchNumberDto Branch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentDueDate")]
        public DateTime? DocumentDueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customer")]
        public CustomerNumberDto Customer { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Invoice', 'DebitNote',
        /// 'CreditNote', 'Payment', 'VoidPayment', 'Prepayment', 'Refund',
        /// 'FinCharge', 'SmallBalanceWo', 'SmallCreditWo', 'CashSale',
        /// 'CashReturn', 'Undefined', 'NoUpdate'.
        /// </summary>
        [JsonProperty(PropertyName = "documentType")]
        public string DocumentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "referenceNumber")]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postPeriod")]
        public string PostPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "financialPeriod")]
        public string FinancialPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentDate")]
        public DateTime? DocumentDate { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Hold', 'Balanced',
        /// 'Voided', 'Scheduled', 'Open', 'Closed', 'PendingPrint',
        /// 'PendingEmail', 'CreditHold', 'CcHold'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountInCurrency")]
        public double? AmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "balance")]
        public double? Balance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "balanceInCurrency")]
        public double? BalanceInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cashDiscount")]
        public double? CashDiscount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cashDiscountInCurrency")]
        public double? CashDiscountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public PaymentMethodIdDescriptionDto PaymentMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerRefNumber")]
        public string CustomerRefNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceText")]
        public string InvoiceText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public string Note { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatTotal")]
        public double? VatTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatTotalInCurrency")]
        public double? VatTotalInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

    }
}
