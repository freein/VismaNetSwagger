// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a InventorySummary in
    /// InventorySummaryController. Used by getting data.
    /// </summary>
    public partial class InventorySummaryDto
    {
        /// <summary>
        /// Initializes a new instance of the InventorySummaryDto class.
        /// </summary>
        public InventorySummaryDto() { }

        /// <summary>
        /// Initializes a new instance of the InventorySummaryDto class.
        /// </summary>
        public InventorySummaryDto(InventoryNumberDescriptionDto inventory = default(InventoryNumberDescriptionDto), WarehouseIdDescriptionDto warehouse = default(WarehouseIdDescriptionDto), LocationIdNameDto location = default(LocationIdNameDto), double? available = default(double?), double? availableForShipment = default(double?), double? notAvailable = default(double?), double? soBooked = default(double?), double? soAllocated = default(double?), double? soShipped = default(double?), double? soBackOrdered = default(double?), double? inIssues = default(double?), double? inReceipts = default(double?), double? inTransit = default(double?), double? inAssemblyDemand = default(double?), double? inAssemblySupply = default(double?), double? purchasePrepared = default(double?), double? purchaseOrders = default(double?), double? poReceipts = default(double?), double? expired = default(double?), double? onHand = default(double?), double? soToPurchase = default(double?), double? purchaseForSO = default(double?), double? purchaseForSOPrepared = default(double?), double? purchaseForSOReceipts = default(double?), double? soToDropShip = default(double?), double? dropShipForSO = default(double?), double? dropShipForSOPrepared = default(double?), double? dropShipForSOReceipts = default(double?), string baseUnit = default(string), double? estimatedUnitCost = default(double?), double? estimatedTotalCost = default(double?))
        {
            Inventory = inventory;
            Warehouse = warehouse;
            Location = location;
            Available = available;
            AvailableForShipment = availableForShipment;
            NotAvailable = notAvailable;
            SoBooked = soBooked;
            SoAllocated = soAllocated;
            SoShipped = soShipped;
            SoBackOrdered = soBackOrdered;
            InIssues = inIssues;
            InReceipts = inReceipts;
            InTransit = inTransit;
            InAssemblyDemand = inAssemblyDemand;
            InAssemblySupply = inAssemblySupply;
            PurchasePrepared = purchasePrepared;
            PurchaseOrders = purchaseOrders;
            PoReceipts = poReceipts;
            Expired = expired;
            OnHand = onHand;
            SoToPurchase = soToPurchase;
            PurchaseForSO = purchaseForSO;
            PurchaseForSOPrepared = purchaseForSOPrepared;
            PurchaseForSOReceipts = purchaseForSOReceipts;
            SoToDropShip = soToDropShip;
            DropShipForSO = dropShipForSO;
            DropShipForSOPrepared = dropShipForSOPrepared;
            DropShipForSOReceipts = dropShipForSOReceipts;
            BaseUnit = baseUnit;
            EstimatedUnitCost = estimatedUnitCost;
            EstimatedTotalCost = estimatedTotalCost;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventory")]
        public InventoryNumberDescriptionDto Inventory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public WarehouseIdDescriptionDto Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationIdNameDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "available")]
        public double? Available { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "availableForShipment")]
        public double? AvailableForShipment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notAvailable")]
        public double? NotAvailable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soBooked")]
        public double? SoBooked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soAllocated")]
        public double? SoAllocated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soShipped")]
        public double? SoShipped { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soBackOrdered")]
        public double? SoBackOrdered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inIssues")]
        public double? InIssues { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inReceipts")]
        public double? InReceipts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inTransit")]
        public double? InTransit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inAssemblyDemand")]
        public double? InAssemblyDemand { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inAssemblySupply")]
        public double? InAssemblySupply { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchasePrepared")]
        public double? PurchasePrepared { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaseOrders")]
        public double? PurchaseOrders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "poReceipts")]
        public double? PoReceipts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expired")]
        public double? Expired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onHand")]
        public double? OnHand { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soToPurchase")]
        public double? SoToPurchase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaseForSO")]
        public double? PurchaseForSO { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaseForSOPrepared")]
        public double? PurchaseForSOPrepared { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaseForSOReceipts")]
        public double? PurchaseForSOReceipts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "soToDropShip")]
        public double? SoToDropShip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dropShipForSO")]
        public double? DropShipForSO { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dropShipForSOPrepared")]
        public double? DropShipForSOPrepared { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dropShipForSOReceipts")]
        public double? DropShipForSOReceipts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "baseUnit")]
        public string BaseUnit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "estimatedUnitCost")]
        public double? EstimatedUnitCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "estimatedTotalCost")]
        public double? EstimatedTotalCost { get; set; }

    }
}
