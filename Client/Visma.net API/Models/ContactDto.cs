// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a contact in ContactController. Used by getting
    /// data.
    /// </summary>
    public partial class ContactDto
    {
        /// <summary>
        /// Initializes a new instance of the ContactDto class.
        /// </summary>
        public ContactDto() { }

        /// <summary>
        /// Initializes a new instance of the ContactDto class.
        /// </summary>
        public ContactDto(string displayName = default(string), bool? active = default(bool?), string title = default(string), string firstName = default(string), string lastName = default(string), string position = default(string), string businessAccount = default(string), bool? sameAsAccount = default(bool?), AddressDto address = default(AddressDto), string email = default(string), string web = default(string), string phone1 = default(string), string phone2 = default(string), string phone3 = default(string), string fax = default(string), string contactMethod = default(string), bool? doNotCall = default(bool?), bool? doNotFax = default(bool?), bool? doNotEmail = default(bool?), bool? doNotMail = default(bool?), bool? noMassMail = default(bool?), bool? noMarketing = default(bool?), DateTime? lastModifiedDateTime = default(DateTime?), int? contactId = default(int?))
        {
            DisplayName = displayName;
            Active = active;
            Title = title;
            FirstName = firstName;
            LastName = lastName;
            Position = position;
            BusinessAccount = businessAccount;
            SameAsAccount = sameAsAccount;
            Address = address;
            Email = email;
            Web = web;
            Phone1 = phone1;
            Phone2 = phone2;
            Phone3 = phone3;
            Fax = fax;
            ContactMethod = contactMethod;
            DoNotCall = doNotCall;
            DoNotFax = doNotFax;
            DoNotEmail = doNotEmail;
            DoNotMail = doNotMail;
            NoMassMail = noMassMail;
            NoMarketing = noMarketing;
            LastModifiedDateTime = lastModifiedDateTime;
            ContactId = contactId;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Doctor', 'Miss', 'Mr',
        /// 'Mrs', 'Ms', 'Prof'.
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "position")]
        public string Position { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessAccount")]
        public string BusinessAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sameAsAccount")]
        public bool? SameAsAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public AddressDto Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "web")]
        public string Web { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone1")]
        public string Phone1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone2")]
        public string Phone2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone3")]
        public string Phone3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Any', 'Email', 'Mail',
        /// 'Fax', 'Phone'.
        /// </summary>
        [JsonProperty(PropertyName = "contactMethod")]
        public string ContactMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doNotCall")]
        public bool? DoNotCall { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doNotFax")]
        public bool? DoNotFax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doNotEmail")]
        public bool? DoNotEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doNotMail")]
        public bool? DoNotMail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noMassMail")]
        public bool? NoMassMail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noMarketing")]
        public bool? NoMarketing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contactId")]
        public int? ContactId { get; set; }

    }
}
