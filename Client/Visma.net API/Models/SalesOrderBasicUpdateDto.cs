// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represent a Sales Order in Sales Order Controller. Used to
    /// pass data to server for creating or updating an order
    /// </summary>
    public partial class SalesOrderBasicUpdateDto
    {
        /// <summary>
        /// Initializes a new instance of the SalesOrderBasicUpdateDto class.
        /// </summary>
        public SalesOrderBasicUpdateDto() { }

        /// <summary>
        /// Initializes a new instance of the SalesOrderBasicUpdateDto class.
        /// </summary>
        public SalesOrderBasicUpdateDto(IList<SalesOrderBasicLineUpdateDto> lines = default(IList<SalesOrderBasicLineUpdateDto>), DtoValueString orderType = default(DtoValueString), DtoValueString orderNumber = default(DtoValueString), DtoValueNullableBoolean hold = default(DtoValueNullableBoolean), DtoValueNullableDateTime date = default(DtoValueNullableDateTime), DtoValueNullableDateTime requestOn = default(DtoValueNullableDateTime), DtoValueString customerOrder = default(DtoValueString), DtoValueString customerRefNo = default(DtoValueString), DtoValueString customer = default(DtoValueString), DtoValueString location = default(DtoValueString), DtoValueString currency = default(DtoValueString), DtoValueString description = default(DtoValueString), bool? recalculateShipment = default(bool?))
        {
            Lines = lines;
            OrderType = orderType;
            OrderNumber = orderNumber;
            Hold = hold;
            Date = date;
            RequestOn = requestOn;
            CustomerOrder = customerOrder;
            CustomerRefNo = customerRefNo;
            Customer = customer;
            Location = location;
            Currency = currency;
            Description = description;
            RecalculateShipment = recalculateShipment;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lines")]
        public IList<SalesOrderBasicLineUpdateDto> Lines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderType")]
        public DtoValueString OrderType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderNumber")]
        public DtoValueString OrderNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public DtoValueNullableBoolean Hold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public DtoValueNullableDateTime Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestOn")]
        public DtoValueNullableDateTime RequestOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerOrder")]
        public DtoValueString CustomerOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerRefNo")]
        public DtoValueString CustomerRefNo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customer")]
        public DtoValueString Customer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public DtoValueString Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public DtoValueString Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public DtoValueString Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recalculateShipment")]
        public bool? RecalculateShipment { get; set; }

    }
}
