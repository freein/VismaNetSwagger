// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represent a Sales Order Line in Sales Order Controller.
    /// Used to pass data to server for creating or updating an order line
    /// </summary>
    public partial class SalesOrderLineUpdateDto
    {
        /// <summary>
        /// Initializes a new instance of the SalesOrderLineUpdateDto class.
        /// </summary>
        public SalesOrderLineUpdateDto() { }

        /// <summary>
        /// Initializes a new instance of the SalesOrderLineUpdateDto class.
        /// </summary>
        public SalesOrderLineUpdateDto(DtoValueNullableInt32 branch = default(DtoValueNullableInt32), DtoValueString invoiceNbr = default(DtoValueString), DtoValueNullableSalesOrderOperations salesOrderOperation = default(DtoValueNullableSalesOrderOperations), DtoValueNullableBoolean freeItem = default(DtoValueNullableBoolean), DtoValueNullableDateTime requestedOn = default(DtoValueNullableDateTime), DtoValueNullableDateTime shipOn = default(DtoValueNullableDateTime), DtoValueNullableSalesOrderShipCompleteStatuses shipComplete = default(DtoValueNullableSalesOrderShipCompleteStatuses), DtoValueNullableDecimal undershipThreshold = default(DtoValueNullableDecimal), DtoValueNullableDecimal overshipThreshold = default(DtoValueNullableDecimal), DtoValueNullableBoolean completed = default(DtoValueNullableBoolean), DtoValueNullableBoolean markForPO = default(DtoValueNullableBoolean), DtoValueNullableInventoryReplenishmentSources poSource = default(DtoValueNullableInventoryReplenishmentSources), DtoValueString lotSerialNbr = default(DtoValueString), DtoValueNullableDateTime expirationDate = default(DtoValueNullableDateTime), DtoValueString reasonCode = default(DtoValueString), DtoValueString salesPerson = default(DtoValueString), DtoValueString taxCategory = default(DtoValueString), DtoValueNullableBoolean commissionable = default(DtoValueNullableBoolean), DtoValueString alternateID = default(DtoValueString), DtoValueString projectTask = default(DtoValueString), string operation = default(string), DtoValueNullableInt32 lineNbr = default(DtoValueNullableInt32), DtoValueString inventoryId = default(DtoValueString), DtoValueString warehouse = default(DtoValueString), DtoValueString uom = default(DtoValueString), DtoValueNullableDecimal quantity = default(DtoValueNullableDecimal), DtoValueNullableDecimal unitPrice = default(DtoValueNullableDecimal), DtoValueString discountCode = default(DtoValueString), DtoValueNullableBoolean manualDiscount = default(DtoValueNullableBoolean), DtoValueNullableDecimal discUnitPrice = default(DtoValueNullableDecimal), DtoValueString lineDescription = default(DtoValueString))
        {
            Branch = branch;
            InvoiceNbr = invoiceNbr;
            SalesOrderOperation = salesOrderOperation;
            FreeItem = freeItem;
            RequestedOn = requestedOn;
            ShipOn = shipOn;
            ShipComplete = shipComplete;
            UndershipThreshold = undershipThreshold;
            OvershipThreshold = overshipThreshold;
            Completed = completed;
            MarkForPO = markForPO;
            PoSource = poSource;
            LotSerialNbr = lotSerialNbr;
            ExpirationDate = expirationDate;
            ReasonCode = reasonCode;
            SalesPerson = salesPerson;
            TaxCategory = taxCategory;
            Commissionable = commissionable;
            AlternateID = alternateID;
            ProjectTask = projectTask;
            Operation = operation;
            LineNbr = lineNbr;
            InventoryId = inventoryId;
            Warehouse = warehouse;
            Uom = uom;
            Quantity = quantity;
            UnitPrice = unitPrice;
            DiscountCode = discountCode;
            ManualDiscount = manualDiscount;
            DiscUnitPrice = discUnitPrice;
            LineDescription = lineDescription;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public DtoValueNullableInt32 Branch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceNbr")]
        public DtoValueString InvoiceNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesOrderOperation")]
        public DtoValueNullableSalesOrderOperations SalesOrderOperation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freeItem")]
        public DtoValueNullableBoolean FreeItem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestedOn")]
        public DtoValueNullableDateTime RequestedOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipOn")]
        public DtoValueNullableDateTime ShipOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipComplete")]
        public DtoValueNullableSalesOrderShipCompleteStatuses ShipComplete { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "undershipThreshold")]
        public DtoValueNullableDecimal UndershipThreshold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overshipThreshold")]
        public DtoValueNullableDecimal OvershipThreshold { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completed")]
        public DtoValueNullableBoolean Completed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "markForPO")]
        public DtoValueNullableBoolean MarkForPO { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "poSource")]
        public DtoValueNullableInventoryReplenishmentSources PoSource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lotSerialNbr")]
        public DtoValueString LotSerialNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expirationDate")]
        public DtoValueNullableDateTime ExpirationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reasonCode")]
        public DtoValueString ReasonCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesPerson")]
        public DtoValueString SalesPerson { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxCategory")]
        public DtoValueString TaxCategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commissionable")]
        public DtoValueNullableBoolean Commissionable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alternateID")]
        public DtoValueString AlternateID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "projectTask")]
        public DtoValueString ProjectTask { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Insert', 'Update',
        /// 'Delete'.
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNbr")]
        public DtoValueNullableInt32 LineNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryId")]
        public DtoValueString InventoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public DtoValueString Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uom")]
        public DtoValueString Uom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public DtoValueNullableDecimal Quantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitPrice")]
        public DtoValueNullableDecimal UnitPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountCode")]
        public DtoValueString DiscountCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualDiscount")]
        public DtoValueNullableBoolean ManualDiscount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discUnitPrice")]
        public DtoValueNullableDecimal DiscUnitPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineDescription")]
        public DtoValueString LineDescription { get; set; }

    }
}
