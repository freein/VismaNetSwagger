// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    public static partial class InventorySummaryExtensions
    {
            /// <summary>
            /// Get a range of InventorySummary
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inventoryNumber'>
            /// </param>
            /// <param name='warehouse'>
            /// </param>
            /// <param name='location'>
            /// </param>
            public static IList<InventorySummaryDto> GetAllInventorySummary(this IInventorySummary operations, string inventoryNumber, string warehouse = default(string), string location = default(string))
            {
                return Task.Factory.StartNew(s => ((IInventorySummary)s).GetAllInventorySummaryAsync(inventoryNumber, warehouse, location), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a range of InventorySummary
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inventoryNumber'>
            /// </param>
            /// <param name='warehouse'>
            /// </param>
            /// <param name='location'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<InventorySummaryDto>> GetAllInventorySummaryAsync( this IInventorySummary operations, string inventoryNumber, string warehouse = default(string), string location = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllInventorySummaryWithHttpMessagesAsync(inventoryNumber, warehouse, location, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
