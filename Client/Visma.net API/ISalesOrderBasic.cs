// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// SalesOrderBasic operations.
    /// </summary>
    public partial interface ISalesOrderBasic
    {
        /// <summary>
        /// Get a range of SO Orders
        /// </summary>
        /// <param name='orderType'>
        /// </param>
        /// <param name='greaterThanValue'>
        /// </param>
        /// <param name='numberToRead'>
        /// </param>
        /// <param name='skipRecords'>
        /// </param>
        /// <param name='orderBy'>
        /// </param>
        /// <param name='lastModifiedDateTime'>
        /// </param>
        /// <param name='lastModifiedDateTimeCondition'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SalesOrderBasicDto>>> GetAllOrdersWithHttpMessagesAsync(string orderType = default(string), string greaterThanValue = default(string), int? numberToRead = default(int?), int? skipRecords = default(int?), string orderBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedDateTimeCondition = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a Sale Order
        /// </summary>
        /// <param name='saleOrderUpdateDto'>
        /// Defines the data for the Sale Order to create
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> PostWithHttpMessagesAsync(SalesOrderBasicUpdateDto saleOrderUpdateDto, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific SO Order
        /// </summary>
        /// <param name='orderNbr'>
        /// Identifies the So Order
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SalesOrderBasicDto>> GetWithHttpMessagesAsync(string orderNbr, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Crete shipment operation
        /// </summary>
        /// <param name='saleOrderNumber'>
        /// Reference number of the sale oreder from which the shipment will
        /// be created
        /// </param>
        /// <param name='createShipmentActionDto'>
        /// Defines the data for the action
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CreateShipmentActionResultDto>> CreateShipmentActionWithHttpMessagesAsync(string saleOrderNumber, CreateShipmentActionDto createShipmentActionDto, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update a specific Sale Order
        /// </summary>
        /// <param name='salesOrderNumber'>
        /// Identifies the Sale Order to update
        /// </param>
        /// <param name='saleOrderUpdateDto'>
        /// Defines the data for the Sale Order to update
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> PutWithHttpMessagesAsync(string salesOrderNumber, SalesOrderBasicUpdateDto saleOrderUpdateDto, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
