// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// FinancialPeriod operations.
    /// </summary>
    public partial interface IFinancialPeriod
    {
        /// <summary>
        /// Get a range of Financial Periods
        /// </summary>
        /// <param name='greaterThanValue'>
        /// </param>
        /// <param name='numberToRead'>
        /// </param>
        /// <param name='skipRecords'>
        /// </param>
        /// <param name='orderBy'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<FinancialPeriodDto>>> GetAllWithHttpMessagesAsync(string greaterThanValue = default(string), int? numberToRead = default(int?), int? skipRecords = default(int?), string orderBy = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific Financial Period
        /// </summary>
        /// <param name='financialPeriodId'>
        /// Identifies the Financial Period
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<FinancialPeriodDto>> GetWithHttpMessagesAsync(string financialPeriodId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
