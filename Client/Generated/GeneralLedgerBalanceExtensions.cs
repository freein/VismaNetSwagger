// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    public static partial class GeneralLedgerBalanceExtensions
    {
            /// <summary>
            /// Get a range of General Ledger Balances
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='greaterThanValue'>
            /// </param>
            /// <param name='numberToRead'>
            /// </param>
            /// <param name='skipRecords'>
            /// </param>
            /// <param name='periodId'>
            /// </param>
            /// <param name='periodIdCondition'>
            /// </param>
            /// <param name='orderBy'>
            /// </param>
            /// <param name='lastModifiedDateTime'>
            /// </param>
            /// <param name='lastModifiedDateTimeCondition'>
            /// </param>
            /// <param name='accountId'>
            /// </param>
            /// <param name='yearClosed'>
            /// </param>
            /// <param name='balanceType'>
            /// Possible values for this parameter include: 'Actual', 'Report',
            /// 'Statistical', 'Budget'
            /// </param>
            public static IList<GeneralLedgerBalanceDto> GetAll(this IGeneralLedgerBalance operations, string greaterThanValue = default(string), int? numberToRead = default(int?), int? skipRecords = default(int?), string periodId = default(string), string periodIdCondition = default(string), string orderBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedDateTimeCondition = default(string), string accountId = default(string), int? yearClosed = default(int?), string balanceType = default(string))
            {
                return Task.Factory.StartNew(s => ((IGeneralLedgerBalance)s).GetAllAsync(greaterThanValue, numberToRead, skipRecords, periodId, periodIdCondition, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, accountId, yearClosed, balanceType), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a range of General Ledger Balances
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='greaterThanValue'>
            /// </param>
            /// <param name='numberToRead'>
            /// </param>
            /// <param name='skipRecords'>
            /// </param>
            /// <param name='periodId'>
            /// </param>
            /// <param name='periodIdCondition'>
            /// </param>
            /// <param name='orderBy'>
            /// </param>
            /// <param name='lastModifiedDateTime'>
            /// </param>
            /// <param name='lastModifiedDateTimeCondition'>
            /// </param>
            /// <param name='accountId'>
            /// </param>
            /// <param name='yearClosed'>
            /// </param>
            /// <param name='balanceType'>
            /// Possible values for this parameter include: 'Actual', 'Report',
            /// 'Statistical', 'Budget'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<GeneralLedgerBalanceDto>> GetAllAsync( this IGeneralLedgerBalance operations, string greaterThanValue = default(string), int? numberToRead = default(int?), int? skipRecords = default(int?), string periodId = default(string), string periodIdCondition = default(string), string orderBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedDateTimeCondition = default(string), string accountId = default(string), int? yearClosed = default(int?), string balanceType = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllWithHttpMessagesAsync(greaterThanValue, numberToRead, skipRecords, periodId, periodIdCondition, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, accountId, yearClosed, balanceType, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
