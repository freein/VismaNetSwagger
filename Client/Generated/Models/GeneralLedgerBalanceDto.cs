// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a General Ledger Balance in
    /// GeneralLedgerBalanceController. Used by getting data.
    /// </summary>
    public partial class GeneralLedgerBalanceDto
    {
        /// <summary>
        /// Initializes a new instance of the GeneralLedgerBalanceDto class.
        /// </summary>
        public GeneralLedgerBalanceDto() { }

        /// <summary>
        /// Initializes a new instance of the GeneralLedgerBalanceDto class.
        /// </summary>
        public GeneralLedgerBalanceDto(BranchNumberDto branch = default(BranchNumberDto), LedgerDescriptionDto ledger = default(LedgerDescriptionDto), string balanceType = default(string), string financialPeriod = default(string), AccountNumberDto account = default(AccountNumberDto), int? subaccountId = default(int?), string currencyId = default(string), double? periodToDateDebit = default(double?), double? periodToDateCredit = default(double?), double? beginningBalance = default(double?), double? yearToDateBalance = default(double?), double? periodToDateDebitInCurrency = default(double?), double? periodToDateCreditInCurrency = default(double?), double? beginningBalanceInCurrency = default(double?), double? yearToDateBalanceInCurrency = default(double?), bool? yearClosed = default(bool?), DateTime? lastModifiedDateTime = default(DateTime?))
        {
            Branch = branch;
            Ledger = ledger;
            BalanceType = balanceType;
            FinancialPeriod = financialPeriod;
            Account = account;
            SubaccountId = subaccountId;
            CurrencyId = currencyId;
            PeriodToDateDebit = periodToDateDebit;
            PeriodToDateCredit = periodToDateCredit;
            BeginningBalance = beginningBalance;
            YearToDateBalance = yearToDateBalance;
            PeriodToDateDebitInCurrency = periodToDateDebitInCurrency;
            PeriodToDateCreditInCurrency = periodToDateCreditInCurrency;
            BeginningBalanceInCurrency = beginningBalanceInCurrency;
            YearToDateBalanceInCurrency = yearToDateBalanceInCurrency;
            YearClosed = yearClosed;
            LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public BranchNumberDto Branch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ledger")]
        public LedgerDescriptionDto Ledger { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Actual', 'Report',
        /// 'Statistical', 'Budget'.
        /// </summary>
        [JsonProperty(PropertyName = "balanceType")]
        public string BalanceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "financialPeriod")]
        public string FinancialPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountNumberDto Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subaccountId")]
        public int? SubaccountId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "periodToDateDebit")]
        public double? PeriodToDateDebit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "periodToDateCredit")]
        public double? PeriodToDateCredit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "beginningBalance")]
        public double? BeginningBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yearToDateBalance")]
        public double? YearToDateBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "periodToDateDebitInCurrency")]
        public double? PeriodToDateDebitInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "periodToDateCreditInCurrency")]
        public double? PeriodToDateCreditInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "beginningBalanceInCurrency")]
        public double? BeginningBalanceInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yearToDateBalanceInCurrency")]
        public double? YearToDateBalanceInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yearClosed")]
        public bool? YearClosed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

    }
}
