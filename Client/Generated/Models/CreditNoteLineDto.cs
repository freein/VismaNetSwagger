// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class CreditNoteLineDto
    {
        /// <summary>
        /// Initializes a new instance of the CreditNoteLineDto class.
        /// </summary>
        public CreditNoteLineDto() { }

        /// <summary>
        /// Initializes a new instance of the CreditNoteLineDto class.
        /// </summary>
        public CreditNoteLineDto(IList<AttachmentDto> attachments = default(IList<AttachmentDto>), int? lineNumber = default(int?), string inventoryNumber = default(string), string description = default(string), double? quantity = default(double?), double? unitPrice = default(double?), double? unitPriceInCurrency = default(double?), double? manualAmount = default(double?), double? manualAmountInCurrency = default(double?), double? amount = default(double?), double? amountInCurrency = default(double?), AccountNumberDto account = default(AccountNumberDto), VatCodeDto vatCode = default(VatCodeDto), string uom = default(string), double? discountPercent = default(double?), double? discountAmount = default(double?), double? discountAmountInCurrency = default(double?), bool? manualDiscount = default(bool?), SubAccountDto subaccount = default(SubAccountDto), string salesperson = default(string), int? deferralSchedule = default(int?), string deferralCode = default(string), string discountCode = default(string), string note = default(string))
        {
            Attachments = attachments;
            LineNumber = lineNumber;
            InventoryNumber = inventoryNumber;
            Description = description;
            Quantity = quantity;
            UnitPrice = unitPrice;
            UnitPriceInCurrency = unitPriceInCurrency;
            ManualAmount = manualAmount;
            ManualAmountInCurrency = manualAmountInCurrency;
            Amount = amount;
            AmountInCurrency = amountInCurrency;
            Account = account;
            VatCode = vatCode;
            Uom = uom;
            DiscountPercent = discountPercent;
            DiscountAmount = discountAmount;
            DiscountAmountInCurrency = discountAmountInCurrency;
            ManualDiscount = manualDiscount;
            Subaccount = subaccount;
            Salesperson = salesperson;
            DeferralSchedule = deferralSchedule;
            DeferralCode = deferralCode;
            DiscountCode = discountCode;
            Note = note;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attachments")]
        public IList<AttachmentDto> Attachments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNumber")]
        public int? LineNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryNumber")]
        public string InventoryNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public double? Quantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitPrice")]
        public double? UnitPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitPriceInCurrency")]
        public double? UnitPriceInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualAmount")]
        public double? ManualAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualAmountInCurrency")]
        public double? ManualAmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountInCurrency")]
        public double? AmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountNumberDto Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatCode")]
        public VatCodeDto VatCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uom")]
        public string Uom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountPercent")]
        public double? DiscountPercent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountAmount")]
        public double? DiscountAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountAmountInCurrency")]
        public double? DiscountAmountInCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualDiscount")]
        public bool? ManualDiscount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subaccount")]
        public SubAccountDto Subaccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesperson")]
        public string Salesperson { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deferralSchedule")]
        public int? DeferralSchedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deferralCode")]
        public string DeferralCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountCode")]
        public string DiscountCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public string Note { get; set; }

    }
}
