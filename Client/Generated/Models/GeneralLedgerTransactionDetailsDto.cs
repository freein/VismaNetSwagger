// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class GeneralLedgerTransactionDetailsDto
    {
        /// <summary>
        /// Initializes a new instance of the
        /// GeneralLedgerTransactionDetailsDto class.
        /// </summary>
        public GeneralLedgerTransactionDetailsDto() { }

        /// <summary>
        /// Initializes a new instance of the
        /// GeneralLedgerTransactionDetailsDto class.
        /// </summary>
        public GeneralLedgerTransactionDetailsDto(int? lineNumber = default(int?), string module = default(string), string batchNumber = default(string), DateTime? tranDate = default(DateTime?), string period = default(string), string description = default(string), string refNumber = default(string), BranchNumberDto branch = default(BranchNumberDto), AccountNumberDto account = default(AccountNumberDto), LedgerDescriptionDto ledger = default(LedgerDescriptionDto), string subaccount = default(string), double? begBalance = default(double?), double? debitAmount = default(double?), double? creditAmount = default(double?), double? endingBalance = default(double?), string currency = default(string), double? currBegBalance = default(double?), double? currDebitAmount = default(double?), double? currCreditAmount = default(double?), double? currEndingBalance = default(double?))
        {
            LineNumber = lineNumber;
            Module = module;
            BatchNumber = batchNumber;
            TranDate = tranDate;
            Period = period;
            Description = description;
            RefNumber = refNumber;
            Branch = branch;
            Account = account;
            Ledger = ledger;
            Subaccount = subaccount;
            BegBalance = begBalance;
            DebitAmount = debitAmount;
            CreditAmount = creditAmount;
            EndingBalance = endingBalance;
            Currency = currency;
            CurrBegBalance = currBegBalance;
            CurrDebitAmount = currDebitAmount;
            CurrCreditAmount = currCreditAmount;
            CurrEndingBalance = currEndingBalance;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNumber")]
        public int? LineNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "module")]
        public string Module { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "batchNumber")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tranDate")]
        public DateTime? TranDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "period")]
        public string Period { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "refNumber")]
        public string RefNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public BranchNumberDto Branch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountNumberDto Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ledger")]
        public LedgerDescriptionDto Ledger { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subaccount")]
        public string Subaccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "begBalance")]
        public double? BegBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "debitAmount")]
        public double? DebitAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditAmount")]
        public double? CreditAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endingBalance")]
        public double? EndingBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currBegBalance")]
        public double? CurrBegBalance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currDebitAmount")]
        public double? CurrDebitAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currCreditAmount")]
        public double? CurrCreditAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currEndingBalance")]
        public double? CurrEndingBalance { get; set; }

    }
}
