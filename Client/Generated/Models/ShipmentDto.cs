// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Shipment in ShipmentController. Used by
    /// getting data.
    /// </summary>
    public partial class ShipmentDto
    {
        /// <summary>
        /// Initializes a new instance of the ShipmentDto class.
        /// </summary>
        public ShipmentDto() { }

        /// <summary>
        /// Initializes a new instance of the ShipmentDto class.
        /// </summary>
        public ShipmentDto(string shipmentNumber = default(string), string shipmentType = default(string), string status = default(string), bool? hold = default(bool?), string operation = default(string), DateTime? shipmentDate = default(DateTime?), CustomerDescriptionDto customer = default(CustomerDescriptionDto), LocationDto location = default(LocationDto), WarehouseDto fromWarehouse = default(WarehouseDto), WarehouseDto toWarehouse = default(WarehouseDto), string currencyId = default(string), UserDescriptionDto owner = default(UserDescriptionDto), double? shippedQuantity = default(double?), double? shippedWeight = default(double?), double? shippedVolume = default(double?), double? packages = default(double?), double? packagesWeight = default(double?), double? controlQuantity = default(double?), ShipmentAddressDto deliveryAddress = default(ShipmentAddressDto), ShipmentContactDto deliveryContact = default(ShipmentContactDto), CarrierDescriptionDto shipVia = default(CarrierDescriptionDto), FOBPointDescriptionDto fobPoint = default(FOBPointDescriptionDto), ShippingTermsDescriptionDto shippingTerms = default(ShippingTermsDescriptionDto), ShippingZoneDescriptionDto shippingZone = default(ShippingZoneDescriptionDto), bool? residentialDelivery = default(bool?), bool? saturdayDelivery = default(bool?), bool? useCustomerAccount = default(bool?), bool? insurance = default(bool?), double? freightCost = default(double?), double? freightAmt = default(double?), SigmaIntrastatTransactionDescriptionDto transactionType = default(SigmaIntrastatTransactionDescriptionDto), ModeOfTransportDto modeOfTrasport = default(ModeOfTransportDto), bool? container = default(bool?), IList<ShipmentDetailLineDto> shipmentDetailLines = default(IList<ShipmentDetailLineDto>), IList<ShipmentOrderLineDto> shipmentOrderLines = default(IList<ShipmentOrderLineDto>), IList<PackageDetailLineDto> shipmentPackageLines = default(IList<PackageDetailLineDto>), DateTime? lastModifiedDateTime = default(DateTime?))
        {
            ShipmentNumber = shipmentNumber;
            ShipmentType = shipmentType;
            Status = status;
            Hold = hold;
            Operation = operation;
            ShipmentDate = shipmentDate;
            Customer = customer;
            Location = location;
            FromWarehouse = fromWarehouse;
            ToWarehouse = toWarehouse;
            CurrencyId = currencyId;
            Owner = owner;
            ShippedQuantity = shippedQuantity;
            ShippedWeight = shippedWeight;
            ShippedVolume = shippedVolume;
            Packages = packages;
            PackagesWeight = packagesWeight;
            ControlQuantity = controlQuantity;
            DeliveryAddress = deliveryAddress;
            DeliveryContact = deliveryContact;
            ShipVia = shipVia;
            FobPoint = fobPoint;
            ShippingTerms = shippingTerms;
            ShippingZone = shippingZone;
            ResidentialDelivery = residentialDelivery;
            SaturdayDelivery = saturdayDelivery;
            UseCustomerAccount = useCustomerAccount;
            Insurance = insurance;
            FreightCost = freightCost;
            FreightAmt = freightAmt;
            TransactionType = transactionType;
            ModeOfTrasport = modeOfTrasport;
            Container = container;
            ShipmentDetailLines = shipmentDetailLines;
            ShipmentOrderLines = shipmentOrderLines;
            ShipmentPackageLines = shipmentPackageLines;
            LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipmentNumber")]
        public string ShipmentNumber { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Issue', 'DropShip',
        /// 'Transfer'.
        /// </summary>
        [JsonProperty(PropertyName = "shipmentType")]
        public string ShipmentType { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Open', 'Hold',
        /// 'Completed', 'Cancelled', 'Confirmed', 'Invoiced', 'Receipted',
        /// 'AutoGenerated', 'PartiallyInvoiced'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public bool? Hold { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Issue', 'Receipt'.
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipmentDate")]
        public DateTime? ShipmentDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customer")]
        public CustomerDescriptionDto Customer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromWarehouse")]
        public WarehouseDto FromWarehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "toWarehouse")]
        public WarehouseDto ToWarehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public UserDescriptionDto Owner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippedQuantity")]
        public double? ShippedQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippedWeight")]
        public double? ShippedWeight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippedVolume")]
        public double? ShippedVolume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "packages")]
        public double? Packages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "packagesWeight")]
        public double? PackagesWeight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlQuantity")]
        public double? ControlQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deliveryAddress")]
        public ShipmentAddressDto DeliveryAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deliveryContact")]
        public ShipmentContactDto DeliveryContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipVia")]
        public CarrierDescriptionDto ShipVia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fobPoint")]
        public FOBPointDescriptionDto FobPoint { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingTerms")]
        public ShippingTermsDescriptionDto ShippingTerms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingZone")]
        public ShippingZoneDescriptionDto ShippingZone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "residentialDelivery")]
        public bool? ResidentialDelivery { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "saturdayDelivery")]
        public bool? SaturdayDelivery { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "useCustomerAccount")]
        public bool? UseCustomerAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "insurance")]
        public bool? Insurance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freightCost")]
        public double? FreightCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freightAmt")]
        public double? FreightAmt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionType")]
        public SigmaIntrastatTransactionDescriptionDto TransactionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modeOfTrasport")]
        public ModeOfTransportDto ModeOfTrasport { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "container")]
        public bool? Container { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipmentDetailLines")]
        public IList<ShipmentDetailLineDto> ShipmentDetailLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipmentOrderLines")]
        public IList<ShipmentOrderLineDto> ShipmentOrderLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipmentPackageLines")]
        public IList<PackageDetailLineDto> ShipmentPackageLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

    }
}
