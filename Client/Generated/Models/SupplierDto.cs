// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a supplier in SupplierController. Used by
    /// getting data.
    /// </summary>
    public partial class SupplierDto
    {
        /// <summary>
        /// Initializes a new instance of the SupplierDto class.
        /// </summary>
        public SupplierDto() { }

        /// <summary>
        /// Initializes a new instance of the SupplierDto class.
        /// </summary>
        public SupplierDto(int? internalId = default(int?), string number = default(string), string name = default(string), string status = default(string), AddressDto mainAddress = default(AddressDto), ContactInfoDto mainContact = default(ContactInfoDto), string accountReference = default(string), ParentRecordDto parentRecord = default(ParentRecordDto), ClassDescriptionDto supplierClass = default(ClassDescriptionDto), CreditTermsDto creditTerms = default(CreditTermsDto), string documentLanguage = default(string), string currencyId = default(string), AddressDto remitAddress = default(AddressDto), ContactInfoDto remitContact = default(ContactInfoDto), PaymentMethodIdDescriptionDto paymentMethod = default(PaymentMethodIdDescriptionDto), string cashAccount = default(string), string chargeBearer = default(string), string accountUsedForPayment = default(string), string paymentBy = default(string), int? paymentLeadTime = default(int?), string paymentRefDisplayMask = default(string), bool? paySeparately = default(bool?), AddressDto supplierAddress = default(AddressDto), ContactInfoDto supplierContact = default(ContactInfoDto), LocationDto location = default(LocationDto), string vatRegistrationId = default(string), string corporateId = default(string), VatZoneDto vatZone = default(VatZoneDto), DateTime? lastModifiedDateTime = default(DateTime?))
        {
            InternalId = internalId;
            Number = number;
            Name = name;
            Status = status;
            MainAddress = mainAddress;
            MainContact = mainContact;
            AccountReference = accountReference;
            ParentRecord = parentRecord;
            SupplierClass = supplierClass;
            CreditTerms = creditTerms;
            DocumentLanguage = documentLanguage;
            CurrencyId = currencyId;
            RemitAddress = remitAddress;
            RemitContact = remitContact;
            PaymentMethod = paymentMethod;
            CashAccount = cashAccount;
            ChargeBearer = chargeBearer;
            AccountUsedForPayment = accountUsedForPayment;
            PaymentBy = paymentBy;
            PaymentLeadTime = paymentLeadTime;
            PaymentRefDisplayMask = paymentRefDisplayMask;
            PaySeparately = paySeparately;
            SupplierAddress = supplierAddress;
            SupplierContact = supplierContact;
            Location = location;
            VatRegistrationId = vatRegistrationId;
            CorporateId = corporateId;
            VatZone = vatZone;
            LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public int? InternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public string Number { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Active', 'OnHold',
        /// 'HoldPayments', 'Inactive', 'OneTime'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mainAddress")]
        public AddressDto MainAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mainContact")]
        public ContactInfoDto MainContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountReference")]
        public string AccountReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentRecord")]
        public ParentRecordDto ParentRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplierClass")]
        public ClassDescriptionDto SupplierClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditTerms")]
        public CreditTermsDto CreditTerms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentLanguage")]
        public string DocumentLanguage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "remitAddress")]
        public AddressDto RemitAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "remitContact")]
        public ContactInfoDto RemitContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public PaymentMethodIdDescriptionDto PaymentMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cashAccount")]
        public string CashAccount { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Payer', 'Beneficiary',
        /// 'Shared', 'ServiceLevel'.
        /// </summary>
        [JsonProperty(PropertyName = "chargeBearer")]
        public string ChargeBearer { get; set; }

        /// <summary>
        /// Possible values for this property include: 'IBAN', 'BBAN',
        /// 'BANKGIRO', 'PLUSGIRO'.
        /// </summary>
        [JsonProperty(PropertyName = "accountUsedForPayment")]
        public string AccountUsedForPayment { get; set; }

        /// <summary>
        /// Possible values for this property include: 'DueDate',
        /// 'DiscountDate'.
        /// </summary>
        [JsonProperty(PropertyName = "paymentBy")]
        public string PaymentBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentLeadTime")]
        public int? PaymentLeadTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentRefDisplayMask")]
        public string PaymentRefDisplayMask { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paySeparately")]
        public bool? PaySeparately { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplierAddress")]
        public AddressDto SupplierAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplierContact")]
        public ContactInfoDto SupplierContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatRegistrationId")]
        public string VatRegistrationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporateId")]
        public string CorporateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatZone")]
        public VatZoneDto VatZone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

    }
}
