// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Landed Cost Line for Purchase Receipt in
    /// PurchaseReceiptController. Used for getting data.
    /// </summary>
    public partial class LandedCostDto
    {
        /// <summary>
        /// Initializes a new instance of the LandedCostDto class.
        /// </summary>
        public LandedCostDto() { }

        /// <summary>
        /// Initializes a new instance of the LandedCostDto class.
        /// </summary>
        public LandedCostDto(int? lineNbr = default(int?), string landedCostCode = default(string), string description = default(string), string purchaseInvoiceNbr = default(string), SupplierDescriptionDto supplier = default(SupplierDescriptionDto), LocationDto location = default(LocationDto), DateTime? apBillDate = default(DateTime?), string currency = default(string), double? amount = default(double?), TaxCategoryNumberDescriptionDto taxCategory = default(TaxCategoryNumberDescriptionDto), CreditTermsDto terms = default(CreditTermsDto), InventoryNumberDescriptionDto inventory = default(InventoryNumberDescriptionDto), string apDocType = default(string), string apRefNbr = default(string), string inDocType = default(string), string inRefNbr = default(string), bool? postponePurchaseInvoiceCreation = default(bool?))
        {
            LineNbr = lineNbr;
            LandedCostCode = landedCostCode;
            Description = description;
            PurchaseInvoiceNbr = purchaseInvoiceNbr;
            Supplier = supplier;
            Location = location;
            ApBillDate = apBillDate;
            Currency = currency;
            Amount = amount;
            TaxCategory = taxCategory;
            Terms = terms;
            Inventory = inventory;
            ApDocType = apDocType;
            ApRefNbr = apRefNbr;
            InDocType = inDocType;
            InRefNbr = inRefNbr;
            PostponePurchaseInvoiceCreation = postponePurchaseInvoiceCreation;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNbr")]
        public int? LineNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "landedCostCode")]
        public string LandedCostCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaseInvoiceNbr")]
        public string PurchaseInvoiceNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplier")]
        public SupplierDescriptionDto Supplier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apBillDate")]
        public DateTime? ApBillDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxCategory")]
        public TaxCategoryNumberDescriptionDto TaxCategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "terms")]
        public CreditTermsDto Terms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventory")]
        public InventoryNumberDescriptionDto Inventory { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Check', 'CreditAdj',
        /// 'DebitAdj', 'Invoice', 'Prepayment', 'QuickCheck', 'Refund',
        /// 'VoidCheck', 'VoidQuickCheck'.
        /// </summary>
        [JsonProperty(PropertyName = "apDocType")]
        public string ApDocType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apRefNbr")]
        public string ApRefNbr { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Invoice', 'DebitNote',
        /// 'CreditNote', 'Payment', 'VoidPayment', 'Prepayment', 'Refund',
        /// 'FinCharge', 'SmallBalanceWo', 'SmallCreditWo', 'CashSale',
        /// 'CashReturn', 'Undefined', 'NoUpdate'.
        /// </summary>
        [JsonProperty(PropertyName = "inDocType")]
        public string InDocType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inRefNbr")]
        public string InRefNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postponePurchaseInvoiceCreation")]
        public bool? PostponePurchaseInvoiceCreation { get; set; }

    }
}
