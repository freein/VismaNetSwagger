// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Purchase Order Line in
    /// PurchaseOrderController. Used for getting data.
    /// </summary>
    public partial class PurchaseOrderLineDto
    {
        /// <summary>
        /// Initializes a new instance of the PurchaseOrderLineDto class.
        /// </summary>
        public PurchaseOrderLineDto() { }

        /// <summary>
        /// Initializes a new instance of the PurchaseOrderLineDto class.
        /// </summary>
        public PurchaseOrderLineDto(int? lineNbr = default(int?), BranchNumberDto branch = default(BranchNumberDto), InventoryNumberDescriptionDto inventory = default(InventoryNumberDescriptionDto), string lineType = default(string), WarehouseIdDescriptionDto warehouse = default(WarehouseIdDescriptionDto), string lineDescription = default(string), string uom = default(string), double? orderQty = default(double?), double? qtyOnReceipts = default(double?), double? unitCost = default(double?), double? extCost = default(double?), double? discountPercent = default(double?), double? discountAmount = default(double?), bool? manualDiscount = default(bool?), DiscountCodeNumberDescriptionDto discountCode = default(DiscountCodeNumberDescriptionDto), double? amount = default(double?), double? receivedAmt = default(double?), string alternateId = default(string), double? minReceipt = default(double?), double? maxReceipt = default(double?), double? completeOn = default(double?), string receiptAction = default(string), TaxCategoryNumberDescriptionDto taxCategory = default(TaxCategoryNumberDescriptionDto), AccountNumberTypeDescriptionDto account = default(AccountNumberTypeDescriptionDto), string description = default(string), SubAccountDto sub = default(SubAccountDto), ProjectDto project = default(ProjectDto), ProjectTaskDto projectTask = default(ProjectTaskDto), DateTime? requested = default(DateTime?), DateTime? promised = default(DateTime?), bool? completed = default(bool?), bool? canceled = default(bool?), string orderType = default(string), string orderNumber = default(string))
        {
            LineNbr = lineNbr;
            Branch = branch;
            Inventory = inventory;
            LineType = lineType;
            Warehouse = warehouse;
            LineDescription = lineDescription;
            Uom = uom;
            OrderQty = orderQty;
            QtyOnReceipts = qtyOnReceipts;
            UnitCost = unitCost;
            ExtCost = extCost;
            DiscountPercent = discountPercent;
            DiscountAmount = discountAmount;
            ManualDiscount = manualDiscount;
            DiscountCode = discountCode;
            Amount = amount;
            ReceivedAmt = receivedAmt;
            AlternateId = alternateId;
            MinReceipt = minReceipt;
            MaxReceipt = maxReceipt;
            CompleteOn = completeOn;
            ReceiptAction = receiptAction;
            TaxCategory = taxCategory;
            Account = account;
            Description = description;
            Sub = sub;
            Project = project;
            ProjectTask = projectTask;
            Requested = requested;
            Promised = promised;
            Completed = completed;
            Canceled = canceled;
            OrderType = orderType;
            OrderNumber = orderNumber;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNbr")]
        public int? LineNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public BranchNumberDto Branch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventory")]
        public InventoryNumberDescriptionDto Inventory { get; set; }

        /// <summary>
        /// Possible values for this property include: 'GoodsForInventory',
        /// 'GoodsForSalesOrder', 'GoodsForReplenishment',
        /// 'GoodsForDropShip', 'NonStockForDropShip',
        /// 'NonStockForSalesOrder', 'NonStock', 'Service', 'Freight',
        /// 'Description'.
        /// </summary>
        [JsonProperty(PropertyName = "lineType")]
        public string LineType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public WarehouseIdDescriptionDto Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineDescription")]
        public string LineDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uom")]
        public string Uom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderQty")]
        public double? OrderQty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "qtyOnReceipts")]
        public double? QtyOnReceipts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitCost")]
        public double? UnitCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extCost")]
        public double? ExtCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountPercent")]
        public double? DiscountPercent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountAmount")]
        public double? DiscountAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualDiscount")]
        public bool? ManualDiscount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountCode")]
        public DiscountCodeNumberDescriptionDto DiscountCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "receivedAmt")]
        public double? ReceivedAmt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alternateId")]
        public string AlternateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minReceipt")]
        public double? MinReceipt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxReceipt")]
        public double? MaxReceipt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completeOn")]
        public double? CompleteOn { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Reject',
        /// 'AcceptButWarn', 'Accept'.
        /// </summary>
        [JsonProperty(PropertyName = "receiptAction")]
        public string ReceiptAction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxCategory")]
        public TaxCategoryNumberDescriptionDto TaxCategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountNumberTypeDescriptionDto Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sub")]
        public SubAccountDto Sub { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "project")]
        public ProjectDto Project { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "projectTask")]
        public ProjectTaskDto ProjectTask { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requested")]
        public DateTime? Requested { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "promised")]
        public DateTime? Promised { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completed")]
        public bool? Completed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "canceled")]
        public bool? Canceled { get; set; }

        /// <summary>
        /// Possible values for this property include: 'RegularOrder',
        /// 'DropShip', 'Blanket', 'StandardBlanket'.
        /// </summary>
        [JsonProperty(PropertyName = "orderType")]
        public string OrderType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderNumber")]
        public string OrderNumber { get; set; }

    }
}
