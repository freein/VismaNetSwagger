// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a customer in CustomerController. Used by
    /// getting data.
    /// </summary>
    public partial class CustomerDto
    {
        /// <summary>
        /// Initializes a new instance of the CustomerDto class.
        /// </summary>
        public CustomerDto() { }

        /// <summary>
        /// Initializes a new instance of the CustomerDto class.
        /// </summary>
        public CustomerDto(int? internalId = default(int?), string number = default(string), string name = default(string), string status = default(string), AddressDto mainAddress = default(AddressDto), ContactInfoDto mainContact = default(ContactInfoDto), string accountReference = default(string), ParentRecordDto parentRecord = default(ParentRecordDto), ClassDescriptionDto customerClass = default(ClassDescriptionDto), CreditTermsDto creditTerms = default(CreditTermsDto), string currencyId = default(string), string creditVerification = default(string), double? creditLimit = default(double?), int? creditDaysPastDue = default(int?), AddressDto invoiceAddress = default(AddressDto), ContactInfoDto invoiceContact = default(ContactInfoDto), bool? printInvoices = default(bool?), bool? acceptAutoInvoices = default(bool?), bool? sendInvoicesByEmail = default(bool?), bool? printStatements = default(bool?), bool? sendStatementsByEmail = default(bool?), bool? printMultiCurrencyStatements = default(bool?), string statementType = default(string), AddressDto deliveryAddress = default(AddressDto), ContactInfoDto deliveryContact = default(ContactInfoDto), string vatRegistrationId = default(string), string corporateId = default(string), VatZoneDto vatZone = default(VatZoneDto), LocationDto location = default(LocationDto), DateTime? lastModifiedDateTime = default(DateTime?), DateTime? createdDateTime = default(DateTime?))
        {
            InternalId = internalId;
            Number = number;
            Name = name;
            Status = status;
            MainAddress = mainAddress;
            MainContact = mainContact;
            AccountReference = accountReference;
            ParentRecord = parentRecord;
            CustomerClass = customerClass;
            CreditTerms = creditTerms;
            CurrencyId = currencyId;
            CreditVerification = creditVerification;
            CreditLimit = creditLimit;
            CreditDaysPastDue = creditDaysPastDue;
            InvoiceAddress = invoiceAddress;
            InvoiceContact = invoiceContact;
            PrintInvoices = printInvoices;
            AcceptAutoInvoices = acceptAutoInvoices;
            SendInvoicesByEmail = sendInvoicesByEmail;
            PrintStatements = printStatements;
            SendStatementsByEmail = sendStatementsByEmail;
            PrintMultiCurrencyStatements = printMultiCurrencyStatements;
            StatementType = statementType;
            DeliveryAddress = deliveryAddress;
            DeliveryContact = deliveryContact;
            VatRegistrationId = vatRegistrationId;
            CorporateId = corporateId;
            VatZone = vatZone;
            Location = location;
            LastModifiedDateTime = lastModifiedDateTime;
            CreatedDateTime = createdDateTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public int? InternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public string Number { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Active', 'OnHold',
        /// 'CreditHold', 'Inactive', 'OneTime'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mainAddress")]
        public AddressDto MainAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mainContact")]
        public ContactInfoDto MainContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountReference")]
        public string AccountReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentRecord")]
        public ParentRecordDto ParentRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerClass")]
        public ClassDescriptionDto CustomerClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditTerms")]
        public CreditTermsDto CreditTerms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currencyId")]
        public string CurrencyId { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Disabled',
        /// 'DaysPastDue', 'CreditLimit', 'LimitAndDaysPastDue'.
        /// </summary>
        [JsonProperty(PropertyName = "creditVerification")]
        public string CreditVerification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditLimit")]
        public double? CreditLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creditDaysPastDue")]
        public int? CreditDaysPastDue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceAddress")]
        public AddressDto InvoiceAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoiceContact")]
        public ContactInfoDto InvoiceContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "printInvoices")]
        public bool? PrintInvoices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "acceptAutoInvoices")]
        public bool? AcceptAutoInvoices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sendInvoicesByEmail")]
        public bool? SendInvoicesByEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "printStatements")]
        public bool? PrintStatements { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sendStatementsByEmail")]
        public bool? SendStatementsByEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "printMultiCurrencyStatements")]
        public bool? PrintMultiCurrencyStatements { get; set; }

        /// <summary>
        /// Possible values for this property include: 'OpenItem',
        /// 'BalanceBroughtForward'.
        /// </summary>
        [JsonProperty(PropertyName = "statementType")]
        public string StatementType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deliveryAddress")]
        public AddressDto DeliveryAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deliveryContact")]
        public ContactInfoDto DeliveryContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatRegistrationId")]
        public string VatRegistrationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporateId")]
        public string CorporateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatZone")]
        public VatZoneDto VatZone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public DateTime? CreatedDateTime { get; set; }

    }
}
