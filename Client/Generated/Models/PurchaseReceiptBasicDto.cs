// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This class represents a Purchase Receipt in PurchaseReceiptController.
    /// Used for getting data.
    /// </summary>
    public partial class PurchaseReceiptBasicDto
    {
        /// <summary>
        /// Initializes a new instance of the PurchaseReceiptBasicDto class.
        /// </summary>
        public PurchaseReceiptBasicDto() { }

        /// <summary>
        /// Initializes a new instance of the PurchaseReceiptBasicDto class.
        /// </summary>
        public PurchaseReceiptBasicDto(string receiptType = default(string), string receiptNbr = default(string), bool? hold = default(bool?), string status = default(string), DateTime? date = default(DateTime?), string postPeriod = default(string), WarehouseIdDescriptionDto warehouse = default(WarehouseIdDescriptionDto), SupplierDescriptionDto supplier = default(SupplierDescriptionDto), LocationDto location = default(LocationDto), string currency = default(string), bool? createBill = default(bool?), string supplierRef = default(string), double? totalQty = default(double?), double? controlQty = default(double?), double? vatExemptTotal = default(double?), double? vatTaxableTotal = default(double?), double? totalAmt = default(double?), double? controlTotal = default(double?), DateTime? lastModifiedDateTime = default(DateTime?), IList<PurchaseReceiptLineDto> lines = default(IList<PurchaseReceiptLineDto>))
        {
            ReceiptType = receiptType;
            ReceiptNbr = receiptNbr;
            Hold = hold;
            Status = status;
            Date = date;
            PostPeriod = postPeriod;
            Warehouse = warehouse;
            Supplier = supplier;
            Location = location;
            Currency = currency;
            CreateBill = createBill;
            SupplierRef = supplierRef;
            TotalQty = totalQty;
            ControlQty = controlQty;
            VatExemptTotal = vatExemptTotal;
            VatTaxableTotal = vatTaxableTotal;
            TotalAmt = totalAmt;
            ControlTotal = controlTotal;
            LastModifiedDateTime = lastModifiedDateTime;
            Lines = lines;
        }

        /// <summary>
        /// Possible values for this property include: 'PoReceipt',
        /// 'PoReturn', 'TransferReceipt'.
        /// </summary>
        [JsonProperty(PropertyName = "receiptType")]
        public string ReceiptType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "receiptNbr")]
        public string ReceiptNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hold")]
        public bool? Hold { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Hold', 'Balanced',
        /// 'Released'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postPeriod")]
        public string PostPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public WarehouseIdDescriptionDto Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplier")]
        public SupplierDescriptionDto Supplier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createBill")]
        public bool? CreateBill { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplierRef")]
        public string SupplierRef { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalQty")]
        public double? TotalQty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlQty")]
        public double? ControlQty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatExemptTotal")]
        public double? VatExemptTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatTaxableTotal")]
        public double? VatTaxableTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalAmt")]
        public double? TotalAmt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlTotal")]
        public double? ControlTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lines")]
        public IList<PurchaseReceiptLineDto> Lines { get; set; }

    }
}
