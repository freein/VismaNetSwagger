// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class StocktakeLineDto
    {
        /// <summary>
        /// Initializes a new instance of the StocktakeLineDto class.
        /// </summary>
        public StocktakeLineDto() { }

        /// <summary>
        /// Initializes a new instance of the StocktakeLineDto class.
        /// </summary>
        public StocktakeLineDto(string status = default(string), int? lineNbr = default(int?), int? tagNbr = default(int?), InventoryIdNameDto inventory = default(InventoryIdNameDto), LocationIdNameDto location = default(LocationIdNameDto), WarehouseIdDescriptionDto warehouse = default(WarehouseIdDescriptionDto), string lotSerialNbr = default(string), DateTime? expirationDate = default(DateTime?), double? bookQuantity = default(double?), double? physicalQuantity = default(double?), double? varianceQuantity = default(double?), double? unitCost = default(double?), double? extVarianceCost = default(double?), string reasonCode = default(string), DateTime? lastModifiedDateTime = default(DateTime?))
        {
            Status = status;
            LineNbr = lineNbr;
            TagNbr = tagNbr;
            Inventory = inventory;
            Location = location;
            Warehouse = warehouse;
            LotSerialNbr = lotSerialNbr;
            ExpirationDate = expirationDate;
            BookQuantity = bookQuantity;
            PhysicalQuantity = physicalQuantity;
            VarianceQuantity = varianceQuantity;
            UnitCost = unitCost;
            ExtVarianceCost = extVarianceCost;
            ReasonCode = reasonCode;
            LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// Possible values for this property include: 'NotEntered',
        /// 'Entered', 'Skipped'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNbr")]
        public int? LineNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tagNbr")]
        public int? TagNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventory")]
        public InventoryIdNameDto Inventory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationIdNameDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warehouse")]
        public WarehouseIdDescriptionDto Warehouse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lotSerialNbr")]
        public string LotSerialNbr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expirationDate")]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bookQuantity")]
        public double? BookQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "physicalQuantity")]
        public double? PhysicalQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "varianceQuantity")]
        public double? VarianceQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitCost")]
        public double? UnitCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extVarianceCost")]
        public double? ExtVarianceCost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reasonCode")]
        public string ReasonCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

    }
}
