// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// </summary>
    public partial class InventoryDto
    {
        /// <summary>
        /// Initializes a new instance of the InventoryDto class.
        /// </summary>
        public InventoryDto() { }

        /// <summary>
        /// Initializes a new instance of the InventoryDto class.
        /// </summary>
        public InventoryDto(int? inventoryId = default(int?), string inventoryNumber = default(string), string status = default(string), string type = default(string), string description = default(string), ItemClassDto itemClass = default(ItemClassDto), PostingClassDto postingClass = default(PostingClassDto), VatCodeDto vatCode = default(VatCodeDto), double? defaultPrice = default(double?), DateTime? lastModifiedDateTime = default(DateTime?), IList<InventoryCrossReferenceDto> crossReferences = default(IList<InventoryCrossReferenceDto>))
        {
            InventoryId = inventoryId;
            InventoryNumber = inventoryNumber;
            Status = status;
            Type = type;
            Description = description;
            ItemClass = itemClass;
            PostingClass = postingClass;
            VatCode = vatCode;
            DefaultPrice = defaultPrice;
            LastModifiedDateTime = lastModifiedDateTime;
            CrossReferences = crossReferences;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryId")]
        public int? InventoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inventoryNumber")]
        public string InventoryNumber { get; set; }

        /// <summary>
        /// Possible values for this property include: 'Active', 'NoSales',
        /// 'NoPurchases', 'NoRequest', 'Inactive', 'MarkedForDeletion'.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Possible values for this property include: 'NonStockItem',
        /// 'LaborItem', 'ServiceItem', 'ChargeItem', 'ExpenseItem',
        /// 'FinishedGoodItem', 'ComponentPartItem', 'SubassemblyItem'.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "itemClass")]
        public ItemClassDto ItemClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postingClass")]
        public PostingClassDto PostingClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatCode")]
        public VatCodeDto VatCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultPrice")]
        public double? DefaultPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crossReferences")]
        public IList<InventoryCrossReferenceDto> CrossReferences { get; set; }

    }
}
