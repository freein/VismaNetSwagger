// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace visma
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// CustomerInvoice operations.
    /// </summary>
    public partial interface ICustomerInvoice
    {
        /// <summary>
        /// Get a range of Invoices
        /// </summary>
        /// <param name='greaterThanValue'>
        /// </param>
        /// <param name='released'>
        /// </param>
        /// <param name='numberToRead'>
        /// </param>
        /// <param name='skipRecords'>
        /// </param>
        /// <param name='orderBy'>
        /// </param>
        /// <param name='lastModifiedDateTime'>
        /// </param>
        /// <param name='lastModifiedDateTimeCondition'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CustomerInvoiceDto>>> GetAllInvoicesWithHttpMessagesAsync(string greaterThanValue = default(string), int? released = default(int?), int? numberToRead = default(int?), int? skipRecords = default(int?), string orderBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedDateTimeCondition = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create an Invoice
        /// </summary>
        /// <param name='invoice'>
        /// Defines the data for the Invoice to create
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> CreateInvoiceWithHttpMessagesAsync(CustomerInvoiceUpdateDto invoice, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a specific Invoice
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Identifies the Invoice
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CustomerInvoiceDto>> GetWithHttpMessagesAsync(string invoiceNumber, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update a specific Invoice
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Identifies the Invoice to update
        /// </param>
        /// <param name='invoice'>
        /// Defines the data for the Invoice to update
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> PutWithHttpMessagesAsync(string invoiceNumber, CustomerInvoiceUpdateDto invoice, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Release invoice operation
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Reference number of the invoice to be released
        /// </param>
        /// <param name='releaseActionDto'>
        /// The action the dto use to condition the action
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ReleaseInvoiceActionResultDto>> ReleaseInvoiceWithHttpMessagesAsync(string invoiceNumber, object releaseActionDto, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Reverse an Invoice
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Reference number of the released invoice to be reversed
        /// </param>
        /// <param name='reverseActionDto'>
        /// The action the dto use to condition the action
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ReverseInvoiceActionResultDto>> ReverseInvoiceWithHttpMessagesAsync(string invoiceNumber, ReverseInvoiceActionDto reverseActionDto, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates an attachment and associates it with an invoice. If the
        /// file already exists, a new revision is created.
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Identifies the invoice
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> CreateHeaderAttachmentWithHttpMessagesAsync(string invoiceNumber, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates an attachment and associates it with a certain invoice
        /// line. If the file already exists, a new revision is created.
        /// </summary>
        /// <param name='invoiceNumber'>
        /// Identifies the invoice
        /// </param>
        /// <param name='lineNumber'>
        /// Specifies line number
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> CreateLineAttachmentWithHttpMessagesAsync(string invoiceNumber, int? lineNumber, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
